image: atlassian/default-image:3
pipelines:
  custom:
    build-and-deploy:
      - step:
          name: Build dev
          script:
            - IMAGE_NAME=esimplus-dev
            - VERSION=0.1.${BITBUCKET_BUILD_NUMBER}
            - touch .env
            - echo NEXT_PUBLIC_BASE_URL=${DEV_NEXT_PUBLIC_BASE_URL} >> .env
            - echo NEXT_PUBLIC_SERVER_URL=${DEV_NEXT_PUBLIC_SERVER_URL} >> .env
            - echo NEXT_PUBLIC_ECOMMPAY_PROJECT_ID=${DEV_NEXT_PUBLIC_ECOMMPAY_PROJECT_ID} >> .env
            - echo NEXT_PUBLIC_MIXPANEL_TOKEN=${NEXT_PUBLIC_MIXPANEL_TOKEN} >> .env
            - echo NEXT_PUBLIC_YANDEX_METRIKA_TOKEN=${NEXT_PUBLIC_YANDEX_METRIKA_TOKEN} >> .env
            - echo NEXT_PUBLIC_GTAG_TOKEN=${NEXT_PUBLIC_GTAG_TOKEN} >> .env
            - echo NEXT_PUBLIC_FACEBOOK_TOKEN=${NEXT_PUBLIC_FACEBOOK_TOKEN} >> .env
            - echo NEXT_PUBLIC_RUNTIME_ENV=${DEV_NEXT_PUBLIC_RUNTIME_ENV} >> .env
            - echo RUNTIME_REDIS_HOST=${NEXT_PUBLIC_REDIS_HOST} >> .env
            - echo RUNTIME_REDIS_PORT=${NEXT_PUBLIC_REDIS_PORT} >> .env
            - echo BUILD_MODE=build >> .env
            - echo BUILD_REDIS_HOST=${BITBUCKET_DOCKER_HOST_INTERNAL} >> .env
            - echo BUILD_REDIS_PORT=6379 >> .env
            - cat .env
            - echo ${DOCKERHUB_PASSWORD} | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
            - docker build -f ./docker/prod/Dockerfile -t "landings:${IMAGE_NAME}-${VERSION}" .
            - docker tag "landings:${IMAGE_NAME}-${VERSION}" "appvillisdocker/landings:${IMAGE_NAME}-${VERSION}"
            - docker push "appvillisdocker/landings:${IMAGE_NAME}-${VERSION}"
          services:
            - docker
            - redis
      - step:
          name: Deploy dev
          script:
            - IMAGE_NAME=esimplus-dev
            - VERSION=0.1.${BITBUCKET_BUILD_NUMBER}
            - sed -i 's/IMAGE_NAME_VALUE/'"$IMAGE_NAME"'/g' ./deploy-dev.sh
            - sed -i 's/VERSION_VALUE/'"$VERSION"'/g' ./deploy-dev.sh
            - cat ./deploy-dev.sh
            - cat ./deploy-dev.sh | ssh ${DEPLOY_USER}@${DEPLOY_HOST}
      - step:
          name: Build prod
          trigger: manual
          script:
            - IMAGE_NAME=esimplus-prod
            - VERSION=0.1.${BITBUCKET_BUILD_NUMBER}
            - touch .env
            - echo NEXT_PUBLIC_BASE_URL=${PROD_NEXT_PUBLIC_BASE_URL} >> .env
            - echo NEXT_PUBLIC_SERVER_URL=${PROD_NEXT_PUBLIC_SERVER_URL} >> .env
            - echo NEXT_PUBLIC_ECOMMPAY_PROJECT_ID=${PROD_NEXT_PUBLIC_ECOMMPAY_PROJECT_ID} >> .env
            - echo NEXT_PUBLIC_MIXPANEL_TOKEN=${NEXT_PUBLIC_MIXPANEL_TOKEN} >> .env
            - echo NEXT_PUBLIC_YANDEX_METRIKA_TOKEN=${NEXT_PUBLIC_YANDEX_METRIKA_TOKEN} >> .env
            - echo NEXT_PUBLIC_GTAG_TOKEN=${NEXT_PUBLIC_GTAG_TOKEN} >> .env
            - echo NEXT_PUBLIC_FACEBOOK_TOKEN=${NEXT_PUBLIC_FACEBOOK_TOKEN} >> .env
            - echo NEXT_PUBLIC_RUNTIME_ENV=${PROD_NEXT_PUBLIC_RUNTIME_ENV} >> .env
            - echo NEXT_PUBLIC_REDIS_HOST=${NEXT_PUBLIC_REDIS_HOST} >> .env
            - echo NEXT_PUBLIC_REDIS_PORT=${NEXT_PUBLIC_REDIS_PORT} >> .env
            - echo ${DOCKERHUB_PASSWORD} | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
            - docker build -f ./docker/prod/Dockerfile -t "landings:${IMAGE_NAME}-${VERSION}" .
            - docker tag "landings:${IMAGE_NAME}-${VERSION}" "appvillisdocker/landings:${IMAGE_NAME}-${VERSION}"
            - docker push "appvillisdocker/landings:${IMAGE_NAME}-${VERSION}"
          services:
            - docker
      - step:
          name: Deploy prod
          trigger: manual
          script:
            - IMAGE_NAME=esimplus-prod
            - VERSION=0.1.${BITBUCKET_BUILD_NUMBER}
            - sed -i 's/IMAGE_NAME_VALUE/'"$IMAGE_NAME"'/g' ./deploy-prod.sh
            - sed -i 's/VERSION_VALUE/'"$VERSION"'/g' ./deploy-prod.sh
            - cat ./deploy-prod.sh
            - cat ./deploy-prod.sh | ssh ${DEPLOY_USER}@${DEPLOY_HOST}
definitions:
  services:
    docker:
      memory: 3072
    redis:
      image: redis
